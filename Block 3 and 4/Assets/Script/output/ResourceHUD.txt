using UnityEngine;
using TMPro;

/// <summary>
/// 右上角资源显示：Film / Food
/// </summary>
public class ResourceHUD : MonoBehaviour
{
    [SerializeField] TMP_Text filmText;   // “FILM  x/y”
    [SerializeField] TMP_Text foodText;   // “FOOD  x/y”

    void OnEnable()
    {
        if (ConsumableManager.Instance != null)
        {
            ConsumableManager.Instance.OnConsumableChanged += Refresh;
            Refresh();          // 初始刷新
        }
    }

    void OnDisable()
    {
        if (ConsumableManager.Instance != null)
            ConsumableManager.Instance.OnConsumableChanged -= Refresh;
    }

    /* ────────────────── 主动刷新整块 UI ────────────────── */
    public void Refresh()
    {
        var cm = ConsumableManager.Instance;
        if (cm == null) return;

        filmText.text = $"FILM  {cm.Film}/{cm.filmCap}";
        foodText.text = $"FOOD  {cm.Food}/{cm.foodCap}";
    }

    /* ────────────────── 单项文本更新（UIManager 调用） ────────────────── */
    /// <summary>
    /// 更新指定资源的显示文本。
    /// <para>type: "film" / "food"（大小写均可）</para>
    /// <para>value: 已排好格式的文本，例如 "FILM  12/20"</para>
    /// </summary>
    public void UpdateText(string type, string value)
    {
        switch (type.ToLowerInvariant())
        {
            case "film":
                if (filmText != null) filmText.text = value;
                break;

            case "food":
                if (foodText != null) foodText.text = value;
                break;

            default:
                Debug.LogWarning($"ResourceHUD.UpdateText: 未识别的 type = {type}");
                break;
        }
    }

    /* ────────────────── 兼容旧代码的无参重载 ────────────────── */
    public void UpdateText() => Refresh();
}
